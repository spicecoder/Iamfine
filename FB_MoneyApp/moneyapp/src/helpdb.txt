	
Show help on collection methods. The <collection> can be the name of an existing collection or a non-existing collection.
show dbs
	

Print a list of all databases on the server.

The operation corresponds to the listDatabases command. If the deployment runs with access control, the operation returns different values based on user privileges. See listDatabases Behavior for details.
use <db>
	
Switch current database to <db>. The mongo shell variable db is set to the current database.
show collections
	

Print a list of all collections for current database.
Tip
See also:

show collections
show users
	
Print a list of users for current database.
show roles
	
Print a list of all roles, both user-defined and built-in, for the current database.
show profile
	
Print the five most recent operations that took 1 millisecond or more. See documentation on the database profiler for more information.
show databases
	

Print a list of all available databases.

The operation corresponds to the listDatabases command. If the deployment runs with access control, the operation returns different values based on user privileges. See listDatabases Behavior for details.
load()
	
Execute a JavaScript file. See Write Scripts for the mongo Shell for more information.
Basic Shell JavaScript Operations

The mongo shell provides a JavaScript API for database operations.

In the mongo shell, db is the variable that references the current database. The variable is automatically set to the default database test or is set when you use the use <db> to switch current database.

The following table displays some common JavaScript operations:
JavaScript Database Operations
	
Description
db.auth()
	
If running in secure mode, authenticate the user.
coll = db.<collection>
	

Set a specific collection in the current database to a variable coll, as in the following example:

coll = db.myCollection;

You can perform operations on the myCollection using the variable, as in the following example:

coll.find();

db.collection.find()
	

Find all documents in the collection and returns a cursor.

See the db.collection.find() and Query Documents for more information and examples.

See Iterate a Cursor in mongosh for information on cursor handling in the mongo shell.
db.collection.insertOne()
	
Insert a new document into the collection.
db.collection.insertMany()
	
Insert multiple new documents into the collection.
db.collection.updateOne()
	
Update a single existing document in the collection.
db.collection.updateMany()
	
Update multiple existing documents in the collection.
db.collection.deleteOne()
	
Delete a single document from the collection.
db.collection.deleteMany()
	
Delete documents from the collection.
db.collection.drop()
	
Drops or removes completely the collection.
db.collection.createIndex()
	
Create a new index on the collection if the index does not exist; otherwise, the operation has no effect.
db.getSiblingDB()
	
Return a reference to another database using this same connection without explicitly switching the current database. This allows for cross database queries.

For more information on performing operations in the shell, see:

    MongoDB CRUD Operations

    mongosh Methods